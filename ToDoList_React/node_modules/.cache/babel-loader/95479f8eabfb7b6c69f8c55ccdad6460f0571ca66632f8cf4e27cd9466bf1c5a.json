{"ast":null,"code":"var _jsxFileName = \"/Users/doseon/Desktop/Hancom AI/Practice/React/todo-app/src/components/organisms/TodoList.tsx\";\nimport React from \"react\";\nimport TodoItem from \"../atoms/TodoItem\";\nimport styles from \"./TodoList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// To Do List Component\nconst TodoList = ({\n  todos,\n  toggleComplete,\n  deleteTodo,\n  editTodo\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: styles.todoList,\n    children: todos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n      todo: todo,\n      toggleComplete: () => toggleComplete(todo.id),\n      deleteTodo: () => deleteTodo(todo.id),\n      editTodo: (content, dueDate) => editTodo(todo.id, content, dueDate)\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","TodoItem","styles","jsxDEV","_jsxDEV","TodoList","todos","toggleComplete","deleteTodo","editTodo","className","todoList","children","map","todo","id","content","dueDate","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/doseon/Desktop/Hancom AI/Practice/React/todo-app/src/components/organisms/TodoList.tsx"],"sourcesContent":["import React from \"react\";\nimport TodoItem from \"../atoms/TodoItem\";\nimport styles from \"./TodoList.module.css\";\n\ninterface Todo {\n  id: string;\n  content: string;\n  complete: boolean;\n  dueDate?: string;\n}\n\ninterface TodoListProps {\n  todos: Todo[];\n  toggleComplete: (id: string) => void;\n  deleteTodo: (id: string) => void;\n  editTodo: (id: string, content: string, dueDate?: string) => void;\n  reorderTodos: (startIndex: number, endIndex: number) => void;\n}\n\n// To Do List Component\nconst TodoList: React.FC<TodoListProps> = ({\n  todos,\n  toggleComplete,\n  deleteTodo,\n  editTodo,\n}) => {\n  return (\n    <ul className={styles.todoList}>\n      {todos.map((todo) => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          toggleComplete={() => toggleComplete(todo.id)}\n          deleteTodo={() => deleteTodo(todo.id)}\n          editTodo={(content, dueDate) => editTodo(todo.id, content, dueDate)}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default TodoList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,MAAM,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAiB3C;AACA,MAAMC,QAAiC,GAAGA,CAAC;EACzCC,KAAK;EACLC,cAAc;EACdC,UAAU;EACVC;AACF,CAAC,KAAK;EACJ,oBACEL,OAAA;IAAIM,SAAS,EAAER,MAAM,CAACS,QAAS;IAAAC,QAAA,EAC5BN,KAAK,CAACO,GAAG,CAAEC,IAAI,iBACdV,OAAA,CAACH,QAAQ;MAEPa,IAAI,EAAEA,IAAK;MACXP,cAAc,EAAEA,CAAA,KAAMA,cAAc,CAACO,IAAI,CAACC,EAAE,CAAE;MAC9CP,UAAU,EAAEA,CAAA,KAAMA,UAAU,CAACM,IAAI,CAACC,EAAE,CAAE;MACtCN,QAAQ,EAAEA,CAACO,OAAO,EAAEC,OAAO,KAAKR,QAAQ,CAACK,IAAI,CAACC,EAAE,EAAEC,OAAO,EAAEC,OAAO;IAAE,GAJ/DH,IAAI,CAACC,EAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKb,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET,CAAC;AAACC,EAAA,GAnBIjB,QAAiC;AAqBvC,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}