{"ast":null,"code":"var _jsxFileName = \"/Users/doseon/Desktop/Hancom AI/Practice/React/todo-app/src/components/atoms/TodoItem.tsx\";\nimport React from \"react\";\nimport styles from \"./TodoItem.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoItem = ({\n  todo,\n  toggleComplete,\n  deleteTodo\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: todo.complete ? styles.complete : \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: styles.checkboxContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: todo.complete,\n        onChange: toggleComplete,\n        className: styles.checkbox\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.checkmark\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: todo.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), todo.dueDate && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\" | \", todo.dueDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = TodoItem;\nexport default TodoItem;\nvar _c;\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"names":["React","styles","jsxDEV","_jsxDEV","TodoItem","todo","toggleComplete","deleteTodo","className","complete","children","checkboxContainer","type","checked","onChange","checkbox","fileName","_jsxFileName","lineNumber","columnNumber","checkmark","content","dueDate","_c","$RefreshReg$"],"sources":["/Users/doseon/Desktop/Hancom AI/Practice/React/todo-app/src/components/atoms/TodoItem.tsx"],"sourcesContent":["import React from \"react\";\nimport styles from \"./TodoItem.module.css\";\n\ninterface Todo {\n  content: string;\n  complete: boolean;\n  dueDate?: string;\n}\n\ninterface TodoItemProps {\n  todo: Todo;\n  toggleComplete: () => void;\n  deleteTodo: () => void;\n}\n\nconst TodoItem: React.FC<TodoItemProps> = ({\n  todo,\n  toggleComplete,\n  deleteTodo,\n}) => {\n  return (\n    <li className={todo.complete ? styles.complete : \"\"}>\n      <label className={styles.checkboxContainer}>\n        <input\n          type=\"checkbox\"\n          checked={todo.complete}\n          onChange={toggleComplete}\n          className={styles.checkbox}\n        />\n        <span className={styles.checkmark}></span>{\" \"}\n        {/* 체크 표시를 위한 span 추가 */}\n      </label>\n      <span>{todo.content}</span>\n      {todo.dueDate && <span> | {todo.dueDate}</span>}\n    </li>\n  );\n};\n\nexport default TodoItem;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAc3C,MAAMC,QAAiC,GAAGA,CAAC;EACzCC,IAAI;EACJC,cAAc;EACdC;AACF,CAAC,KAAK;EACJ,oBACEJ,OAAA;IAAIK,SAAS,EAAEH,IAAI,CAACI,QAAQ,GAAGR,MAAM,CAACQ,QAAQ,GAAG,EAAG;IAAAC,QAAA,gBAClDP,OAAA;MAAOK,SAAS,EAAEP,MAAM,CAACU,iBAAkB;MAAAD,QAAA,gBACzCP,OAAA;QACES,IAAI,EAAC,UAAU;QACfC,OAAO,EAAER,IAAI,CAACI,QAAS;QACvBK,QAAQ,EAAER,cAAe;QACzBE,SAAS,EAAEP,MAAM,CAACc;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACFhB,OAAA;QAAMK,SAAS,EAAEP,MAAM,CAACmB;MAAU;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,EAAC,GAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEzC,CAAC,eACRhB,OAAA;MAAAO,QAAA,EAAOL,IAAI,CAACgB;IAAO;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EAC1Bd,IAAI,CAACiB,OAAO,iBAAInB,OAAA;MAAAO,QAAA,GAAM,KAAG,EAACL,IAAI,CAACiB,OAAO;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAET,CAAC;AAACI,EAAA,GArBInB,QAAiC;AAuBvC,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}