{"ast":null,"code":"var _jsxFileName = \"/Users/doseon/Desktop/Hancom AI/Practice/React/todo-app/src/components/molecules/TodoInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport InputField from \"../atoms/InputField\";\nimport Button from \"../atoms/Button\";\nimport styles from \"./TodoInput.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoInput = ({\n  addTodo\n}) => {\n  _s();\n  const [inputValue, setInputValue] = useState(\"\"); // Todo 내용 상태\n  const [dueDate, setDueDate] = useState(\"\"); // Todo 마감일 상태\n\n  const handleAddClick = () => {\n    if (inputValue) {\n      addTodo(inputValue, dueDate); // Todo 추가\n      setInputValue(\"\"); // 입력 필드 초기화\n      setDueDate(\"\"); // 마감일 초기화\n    }\n  };\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      handleAddClick(); // Enter 키가 눌리면 Todo 추가\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.inputField,\n    children: [/*#__PURE__*/_jsxDEV(InputField, {\n      value: inputValue,\n      onChange: e => setInputValue(e.target.value) // 입력값 변경 시 상태 업데이트\n      ,\n      placeholder: \"Add to your list...\",\n      onKeyPress: handleKeyPress // Enter 키 처리 추가\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: dueDate,\n      onChange: e => setDueDate(e.target.value) // 마감일 변경 시 상태 업데이트\n      ,\n      className: styles.dueDateInput // CSS Module 클래스 추가\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleAddClick,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoInput, \"9EDjtobNb/amuzQJ0L6qqkERQQM=\");\n_c = TodoInput;\nexport default TodoInput;\nvar _c;\n$RefreshReg$(_c, \"TodoInput\");","map":{"version":3,"names":["React","useState","InputField","Button","styles","jsxDEV","_jsxDEV","TodoInput","addTodo","_s","inputValue","setInputValue","dueDate","setDueDate","handleAddClick","handleKeyPress","event","key","className","inputField","children","value","onChange","e","target","placeholder","onKeyPress","fileName","_jsxFileName","lineNumber","columnNumber","type","dueDateInput","onClick","_c","$RefreshReg$"],"sources":["/Users/doseon/Desktop/Hancom AI/Practice/React/todo-app/src/components/molecules/TodoInput.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport InputField from \"../atoms/InputField\";\nimport Button from \"../atoms/Button\";\nimport styles from \"./TodoInput.module.css\";\n\nconst TodoInput: React.FC<{\n  addTodo: (content: string, dueDate?: string) => void;\n}> = ({ addTodo }) => {\n  const [inputValue, setInputValue] = useState<string>(\"\"); // Todo 내용 상태\n  const [dueDate, setDueDate] = useState<string>(\"\"); // Todo 마감일 상태\n\n  const handleAddClick = () => {\n    if (inputValue) {\n      addTodo(inputValue, dueDate); // Todo 추가\n      setInputValue(\"\"); // 입력 필드 초기화\n      setDueDate(\"\"); // 마감일 초기화\n    }\n  };\n\n  const handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === \"Enter\") {\n      handleAddClick(); // Enter 키가 눌리면 Todo 추가\n    }\n  };\n\n  return (\n    <div className={styles.inputField}>\n      <InputField\n        value={inputValue}\n        onChange={(e) => setInputValue(e.target.value)} // 입력값 변경 시 상태 업데이트\n        placeholder=\"Add to your list...\"\n        onKeyPress={handleKeyPress} // Enter 키 처리 추가\n      />\n      <input\n        type=\"date\"\n        value={dueDate}\n        onChange={(e) => setDueDate(e.target.value)} // 마감일 변경 시 상태 업데이트\n        className={styles.dueDateInput} // CSS Module 클래스 추가\n      />\n      <Button onClick={handleAddClick}>Add</Button> {/* 추가 버튼 */}\n    </div>\n  );\n};\n\nexport default TodoInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,MAAM,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,SAEJ,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACpB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAS,EAAE,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAS,EAAE,CAAC,CAAC,CAAC;;EAEpD,MAAMa,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIJ,UAAU,EAAE;MACdF,OAAO,CAACE,UAAU,EAAEE,OAAO,CAAC,CAAC,CAAC;MAC9BD,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;MACnBE,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB;EACF,CAAC;EAED,MAAME,cAAc,GAAIC,KAA4C,IAAK;IACvE,IAAIA,KAAK,CAACC,GAAG,KAAK,OAAO,EAAE;MACzBH,cAAc,CAAC,CAAC,CAAC,CAAC;IACpB;EACF,CAAC;EAED,oBACER,OAAA;IAAKY,SAAS,EAAEd,MAAM,CAACe,UAAW;IAAAC,QAAA,gBAChCd,OAAA,CAACJ,UAAU;MACTmB,KAAK,EAAEX,UAAW;MAClBY,QAAQ,EAAGC,CAAC,IAAKZ,aAAa,CAACY,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAC;MAAA;MAChDI,WAAW,EAAC,qBAAqB;MACjCC,UAAU,EAAEX,cAAe,CAAC;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACFxB,OAAA;MACEyB,IAAI,EAAC,MAAM;MACXV,KAAK,EAAET,OAAQ;MACfU,QAAQ,EAAGC,CAAC,IAAKV,UAAU,CAACU,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAC;MAAA;MAC7CH,SAAS,EAAEd,MAAM,CAAC4B,YAAa,CAAC;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACFxB,OAAA,CAACH,MAAM;MAAC8B,OAAO,EAAEnB,cAAe;MAAAM,QAAA,EAAC;IAAG;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAACrB,EAAA,CArCIF,SAEJ;AAAA2B,EAAA,GAFI3B,SAEJ;AAqCF,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}