{"ast":null,"code":"var _jsxFileName = \"/Users/doseon/Desktop/Hancom AI/Practice/React/todo-app/src/components/organisms/TodoList.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from \"react\";\nimport TodoItem from \"../atoms/TodoItem\";\nimport styles from \"./TodoList.module.css\";\nimport { DndContext, closestCenter, KeyboardSensor, PointerSensor, useSensor, useSensors } from \"@dnd-kit/core\";\nimport { SortableContext, sortableKeyboardCoordinates, verticalListSortingStrategy, useSortable } from \"@dnd-kit/sortable\";\nimport { CSS } from \"@dnd-kit/utilities\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SortableTodoItem = ({\n  todo,\n  toggleComplete,\n  deleteTodo,\n  editTodo\n}) => {\n  _s();\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition\n  } = useSortable({\n    id: todo.id\n  });\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setNodeRef,\n    style: style,\n    children: /*#__PURE__*/_jsxDEV(TodoItem, {\n      todo: todo,\n      toggleComplete: toggleComplete,\n      deleteTodo: deleteTodo,\n      editTodo: editTodo,\n      dragHandleProps: {\n        ...attributes,\n        ...listeners\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(SortableTodoItem, \"FTUh0JV0KNM2MI3tYtLrQh0rr1U=\", false, function () {\n  return [useSortable];\n});\n_c = SortableTodoItem;\nconst TodoList = ({\n  todos,\n  toggleComplete,\n  deleteTodo,\n  editTodo,\n  reorderTodos\n}) => {\n  _s2();\n  const sensors = useSensors(useSensor(PointerSensor), useSensor(KeyboardSensor, {\n    coordinateGetter: sortableKeyboardCoordinates\n  }));\n  const handleDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    if (over && active.id !== over.id) {\n      const oldIndex = todos.findIndex(todo => todo.id === active.id);\n      const newIndex = todos.findIndex(todo => todo.id === over.id);\n      reorderTodos(oldIndex, newIndex);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DndContext, {\n    sensors: sensors,\n    collisionDetection: closestCenter,\n    onDragEnd: handleDragEnd,\n    children: /*#__PURE__*/_jsxDEV(SortableContext, {\n      items: todos.map(todo => todo.id),\n      strategy: verticalListSortingStrategy,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.todoList,\n        children: todos.map(todo => /*#__PURE__*/_jsxDEV(SortableTodoItem, {\n          todo: todo,\n          toggleComplete: () => toggleComplete(todo.id),\n          deleteTodo: () => deleteTodo(todo.id),\n          editTodo: (content, dueDate) => editTodo(todo.id, content, dueDate)\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s2(TodoList, \"qTUGUEQXLZuA6VhIU4W70LX8u1Y=\", false, function () {\n  return [useSensors, useSensor, useSensor];\n});\n_c2 = TodoList;\nexport default TodoList;\nvar _c, _c2;\n$RefreshReg$(_c, \"SortableTodoItem\");\n$RefreshReg$(_c2, \"TodoList\");","map":{"version":3,"names":["React","TodoItem","styles","DndContext","closestCenter","KeyboardSensor","PointerSensor","useSensor","useSensors","SortableContext","sortableKeyboardCoordinates","verticalListSortingStrategy","useSortable","CSS","jsxDEV","_jsxDEV","SortableTodoItem","todo","toggleComplete","deleteTodo","editTodo","_s","attributes","listeners","setNodeRef","transform","transition","id","style","Transform","toString","ref","children","dragHandleProps","fileName","_jsxFileName","lineNumber","columnNumber","_c","TodoList","todos","reorderTodos","_s2","sensors","coordinateGetter","handleDragEnd","event","active","over","oldIndex","findIndex","newIndex","collisionDetection","onDragEnd","items","map","strategy","className","todoList","content","dueDate","_c2","$RefreshReg$"],"sources":["/Users/doseon/Desktop/Hancom AI/Practice/React/todo-app/src/components/organisms/TodoList.tsx"],"sourcesContent":["import React from \"react\";\nimport TodoItem from \"../atoms/TodoItem\";\nimport styles from \"./TodoList.module.css\";\nimport {\n  DndContext,\n  closestCenter,\n  KeyboardSensor,\n  PointerSensor,\n  useSensor,\n  useSensors,\n  DragEndEvent,\n} from \"@dnd-kit/core\";\nimport {\n  arrayMove,\n  SortableContext,\n  sortableKeyboardCoordinates,\n  verticalListSortingStrategy,\n  useSortable,\n} from \"@dnd-kit/sortable\";\nimport { CSS } from \"@dnd-kit/utilities\";\n\ninterface Todo {\n  id: string;\n  content: string;\n  complete: boolean;\n  dueDate?: string;\n}\n\ninterface TodoListProps {\n  todos: Todo[];\n  toggleComplete: (id: string) => void;\n  deleteTodo: (id: string) => void;\n  editTodo: (id: string, content: string, dueDate?: string) => void;\n  reorderTodos: (startIndex: number, endIndex: number) => void;\n}\n\nconst SortableTodoItem = ({ todo, toggleComplete, deleteTodo, editTodo }) => {\n  const { attributes, listeners, setNodeRef, transform, transition } =\n    useSortable({ id: todo.id });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n  };\n\n  return (\n    <div ref={setNodeRef} style={style}>\n      <TodoItem\n        todo={todo}\n        toggleComplete={toggleComplete}\n        deleteTodo={deleteTodo}\n        editTodo={editTodo}\n        dragHandleProps={{ ...attributes, ...listeners }}\n      />\n    </div>\n  );\n};\n\nconst TodoList: React.FC<TodoListProps> = ({\n  todos,\n  toggleComplete,\n  deleteTodo,\n  editTodo,\n  reorderTodos,\n}) => {\n  const sensors = useSensors(\n    useSensor(PointerSensor),\n    useSensor(KeyboardSensor, {\n      coordinateGetter: sortableKeyboardCoordinates,\n    })\n  );\n\n  const handleDragEnd = (event: DragEndEvent) => {\n    const { active, over } = event;\n\n    if (over && active.id !== over.id) {\n      const oldIndex = todos.findIndex((todo) => todo.id === active.id);\n      const newIndex = todos.findIndex((todo) => todo.id === over.id);\n\n      reorderTodos(oldIndex, newIndex);\n    }\n  };\n\n  return (\n    <DndContext\n      sensors={sensors}\n      collisionDetection={closestCenter}\n      onDragEnd={handleDragEnd}\n    >\n      <SortableContext\n        items={todos.map((todo) => todo.id)}\n        strategy={verticalListSortingStrategy}\n      >\n        <ul className={styles.todoList}>\n          {todos.map((todo) => (\n            <SortableTodoItem\n              key={todo.id}\n              todo={todo}\n              toggleComplete={() => toggleComplete(todo.id)}\n              deleteTodo={() => deleteTodo(todo.id)}\n              editTodo={(content, dueDate) =>\n                editTodo(todo.id, content, dueDate)\n              }\n            />\n          ))}\n        </ul>\n      </SortableContext>\n    </DndContext>\n  );\n};\n\nexport default TodoList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}